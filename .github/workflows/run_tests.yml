name: EC platform tests
on:
  push:
  schedule:
    - cron: '0 23 * * *' # run daily at 23:00 (UTC)
  workflow_dispatch:

env:
  GHA_MACHINE_TYPE: n2-standard-8

jobs:
  build:
    container: debian:bullseye
    runs-on: [self-hosted, Linux, X64]
    env:
      IMG_FILE: debian-11-nocloud-amd64.qcow2
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt-mark hold tzdata
          apt update && apt upgrade --no-install-recommends -y
          DEBIAN_FRONTEND=noninteractive apt install --no-install-recommends -y qemu qemu-utils qemu-system-x86 qemu-kvm libguestfs-tools expect linux-image-generic

      - name: Prepare image
        run: |
          wget https://cloud.debian.org/images/cloud/bullseye/latest/${{env.IMG_FILE}}
          qemu-img create -f qcow2 temp.qcow2 130G
          LIBGUESTFS_BACKEND=direct virt-resize --expand /dev/sda1 ${{env.IMG_FILE}} temp.qcow2
          mv temp.qcow2 ${{env.IMG_FILE}}
          LIBGUESTFS_BACKEND=direct virt-copy-in -a ${{env.IMG_FILE}} .github/scripts/run_admin.sh .github/scripts/run_user.sh .github/scripts/helipilot_build.patch /root

      - name: Build tests
        run: |
          ./.github/scripts/expect.exp ${{env.IMG_FILE}}

      - name: Extract artifacts
        run: |
          mkdir -p artifacts-raw artifacts artifacts/dartmonkey artifacts/bloonchipper artifacts/helipilot
          LIBGUESTFS_BACKEND=direct virt-copy-out -a ${{env.IMG_FILE}} /home/runner/chromiumos/src/platform/ec/build /root/vm_log.txt artifacts-raw
          cp artifacts-raw/vm_log.txt artifacts
          copy_artifacts() { find artifacts-raw/build/$1 \( -iname 'test-*.bin' -o -iname '*.RO.elf' -o -iname '*.RW.elf' \) -exec cp '{}' artifacts/$1 \;; }
          copy_artifacts dartmonkey
          copy_artifacts bloonchipper
          copy_artifacts helipilot

      - name: Archive tests binaries
        uses: actions/upload-artifact@v3
        with:
          name: test-binaries
          path: artifacts/

  test:
    container: debian:bullseye
    runs-on: [self-hosted, Linux, X64]
    needs: build
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt-mark hold tzdata
          apt update && apt upgrade -y
          DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends python3 python3-pip python3-venv python3-yaml git

      - name: Configure git
        run: |
          git config --global user.name "Antmicro"
          git config --global user.email "contact@antmicro.com"

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: test-binaries
          path: ./artifacts

      - name: Regenerate test list
        run: |
          ./generate_tests.py

      - name: Run tests
        uses: antmicro/renode-test-action@v3.1.0
        with:
          renode-version: 'latest'
          tests-to-run: '-t tests.yml'

      - name: Archive tests results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            report.html
            log.html
            robot_output.xml
            logs/
