using sysbus
$name?="nucleo_f412zg"
mach create $name

machine LoadPlatformDescription $ORIGIN/nucleo_f412zg-hello_world.repl

# From CONFIG_UART_CONSOLE
showAnalyzer usart2

#logLevel -1 flashController
#cpu0 LogFunctionNames true true

$bin?=$ORIGIN/bloonchipper/tests/test-always_memset.bin
$elf_ro?=$ORIGIN/bloonchipper/tests/always_memset.RO.elf
$elf_rw?=$ORIGIN/bloonchipper/tests/always_memset.RW.elf

$bin?=$ORIGIN/bloonchipper/ec.bin
$elf_ro?=$ORIGIN/bloonchipper/ec.RO.elf
$elf_rw?=$ORIGIN/bloonchipper/ec.RW.elf

# Let's return 1 from 'crec_flash_physical_restore_state' straight away.
#
# Must be added before loading RW.elf because both ELFs contain the symbol.
set hook
"""
value = 1
cpu.SetRegisterUnsafe(0, Antmicro.Renode.Peripherals.CPU.RegisterValue.Create(value, 32))

cpu.PC = cpu.LR
"""

set hook2
"""
value = 0
cpu.SetRegisterUnsafe(0, Antmicro.Renode.Peripherals.CPU.RegisterValue.Create(value, 32))

cpu.PC = cpu.LR
"""

macro reset
"""
    sysbus LoadBinary $bin 0x08000000
    sysbus LoadSymbolsFrom $elf_ro
    cpu0 AddHook `sysbus GetSymbolAddress "crec_flash_physical_restore_state"` $hook
    cpu0 AddHook `sysbus GetSymbolAddress "crec_flash_pre_init"` $hook2
    sysbus LoadSymbolsFrom $elf_rw
    cpu0 PC 0x8000219
"""

runMacro $reset
